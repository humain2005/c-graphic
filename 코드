#include <SFML/Graphics.hpp>
#include <cmath>

sf::Color HSVtoRGB(float H, float S, float V, sf::Uint8 A = 255) {
    float C = V * S;
    float X = C * (1 - fabs(fmod(H / 60.f, 2) - 1));
    float m = V - C;
    float r, g, b;

    if (H < 60)       { r = C; g = X; b = 0; }
    else if (H < 120) { r = X; g = C; b = 0; }
    else if (H < 180) { r = 0; g = C; b = X; }
    else if (H < 240) { r = 0; g = X; b = C; }
    else if (H < 300) { r = X; g = 0; b = C; }
    else              { r = C; g = 0; b = X; }

    return sf::Color((r + m) * 255, (g + m) * 255, (b + m) * 255, A);
}

int main() {
    sf::RenderWindow window(sf::VideoMode(800, 600), "Follow Mouse & Rainbow Color");

    sf::Texture texture;
    if (!texture.loadFromFile("block.jpg"))
        return -1;

    sf::Sprite sprite(texture);
    sf::Vector2u size = texture.getSize();
    sprite.setOrigin(size.x / 2.f, size.y / 2.f);

    sf::Vector2f position(window.getSize().x / 2.f, window.getSize().y / 2.f);
    sprite.setPosition(position);

    sf::Clock clock;

    float speed = 0.005f;

    while (window.isOpen()) {
        sf::Event event;
        while (window.pollEvent(event)) {
            if (event.type == sf::Event::Closed)
                window.close();
        }

        sf::Vector2f mousePos = static_cast<sf::Vector2f>(sf::Mouse::getPosition(window));
        position += (mousePos - position) * speed;
        sprite.setPosition(position);
        float hue = fmod(clock.getElapsedTime().asSeconds() * 60.f, 360.f);
        sf::Color color = HSVtoRGB(hue, 1.f, 1.f);
        sprite.setColor(color);

        window.clear(sf::Color::Black);
        window.draw(sprite);
        window.display();
    }

    return 0;
}
